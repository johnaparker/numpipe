CRITICAL ISSUES
    * if @cache function throws an exception after yields have occured, no results are saved (results should be dumped after an exception)

FEATURE: DEPENDENCY
    * check for circular dependencies
    * print something useful when simulations are being re-ran due to dependencies
    * If B depends on A, and A throws an error.... do something
    * more sophisticated tree dependency checking
    * implicit dependencies using job.load

FEATURE: NOTIFICATIONS
    * notifications of simulation finishing when there is no @plots
    * RCC: can we add a single python --at-end call that runs after all others have finished? (runs with --no-show and --no-delay)
    * deal with multiple @plots

NEW FEATURES
    * job.add_instance(sim, label) --> if label already exists, make the labels label_0, label_1, etc.
    * log summary for each block: run-time, exceptions, etc
    * save animations in parallel (each process needs to call the undecorated @plots function to generate its respective animation)
    * command-line save figure options: file format (svg, pdf, etc.), dpi, bbox_inches, etc.
    * parallel execution with a single h5 file (not add_instance, perhaps add_piece to fill part of the h5file)
    * defer load option to read only part of the h5file

CODE IMPROVEMENTS
    * scheduler.execute function should be broken into smaller functions
    * h5cache: max_memory across all npcaches, npcaches need to concatenate some minimum size
